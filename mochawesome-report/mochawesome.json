{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2020-07-29T07:58:39.373Z",
    "end": "2020-07-29T07:58:39.414Z",
    "duration": 41,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "1e1bad16-8d97-4530-a7bd-a6f9b0261edd",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6de08d5-83d6-4aaf-a32a-f17170086167",
          "title": "Chrome assertions scenarios",
          "fullFile": "C:\\Projects\\HighCode\\Javascript\\newProject\\test\\assertions.chrome.test.js",
          "file": "\\test\\assertions.chrome.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: ret for \"changes opacity when email being showed\"",
              "fullTitle": "Chrome assertions scenarios \"before each\" hook: ret for \"changes opacity when email being showed\"",
              "timedOut": false,
              "duration": 25,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//start new browser and open the website before each scenario\ndriver = new webdriver.Builder().forBrowser('chrome').build();\ndriver.get('https://library-app.firebaseapp.com');\ndriver.manage().window().maximize();",
              "err": {
                "message": "Error: The ChromeDriver could not be found on the current PATH. Please download the latest version of the ChromeDriver from http://chromedriver.storage.googleapis.com/index.html and ensure it can be found on your PATH.",
                "estack": "Error: The ChromeDriver could not be found on the current PATH. Please download the latest version of the ChromeDriver from http://chromedriver.storage.googleapis.com/index.html and ensure it can be found on your PATH.\n    at new ServiceBuilder (node_modules\\selenium-webdriver\\chrome.js:215:13)\n    at getDefaultService (node_modules\\selenium-webdriver\\chrome.js:304:22)\n    at Function.createSession (node_modules\\selenium-webdriver\\chrome.js:752:44)\n    at createDriver (node_modules\\selenium-webdriver\\index.js:170:33)\n    at Builder.build (node_modules\\selenium-webdriver\\index.js:642:16)\n    at Context.<anonymous> (test\\assertions.chrome.test.js:14:63)\n    at runTest (node_modules\\selenium-webdriver\\testing\\index.js:163:22)\n    at C:\\Projects\\HighCode\\Javascript\\newProject\\node_modules\\selenium-webdriver\\testing\\index.js:184:16\n    at new ManagedPromise (node_modules\\selenium-webdriver\\lib\\promise.js:1077:7)\n    at controlFlowExecute (node_modules\\selenium-webdriver\\testing\\index.js:183:14)\n    at TaskQueue.execute_ (node_modules\\selenium-webdriver\\lib\\promise.js:3084:14)\n    at TaskQueue.executeNext_ (node_modules\\selenium-webdriver\\lib\\promise.js:3067:27)\n    at C:\\Projects\\HighCode\\Javascript\\newProject\\node_modules\\selenium-webdriver\\lib\\promise.js:2974:25\n    at C:\\Projects\\HighCode\\Javascript\\newProject\\node_modules\\selenium-webdriver\\lib\\promise.js:668:7\nFrom: Task: Chrome assertions scenarios \"before each\" hook: ret\n    at Context.ret (node_modules\\selenium-webdriver\\testing\\index.js:182:10)\n    at processImmediate (internal/timers.js:458:21)",
                "diff": null
              },
              "uuid": "e1e6f4de-ebaf-4b5e-a388-78bf8c79befa",
              "parentUUID": "e6de08d5-83d6-4aaf-a32a-f17170086167",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook: ret for \"changes opacity when email being showed\"",
              "fullTitle": "Chrome assertions scenarios \"after each\" hook: ret for \"changes opacity when email being showed\"",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {
                "message": "TypeError: Cannot read property 'quit' of undefined",
                "estack": "TypeError: Cannot read property 'quit' of undefined\n    at Context.<anonymous> (test\\assertions.chrome.test.js:20:16)\n    at runTest (node_modules\\selenium-webdriver\\testing\\index.js:163:22)\n    at C:\\Projects\\HighCode\\Javascript\\newProject\\node_modules\\selenium-webdriver\\testing\\index.js:184:16\n    at new ManagedPromise (node_modules\\selenium-webdriver\\lib\\promise.js:1077:7)\n    at controlFlowExecute (node_modules\\selenium-webdriver\\testing\\index.js:183:14)\n    at TaskQueue.execute_ (node_modules\\selenium-webdriver\\lib\\promise.js:3084:14)\n    at TaskQueue.executeNext_ (node_modules\\selenium-webdriver\\lib\\promise.js:3067:27)\n    at C:\\Projects\\HighCode\\Javascript\\newProject\\node_modules\\selenium-webdriver\\lib\\promise.js:2974:25\n    at C:\\Projects\\HighCode\\Javascript\\newProject\\node_modules\\selenium-webdriver\\lib\\promise.js:668:7\nFrom: Task: Chrome assertions scenarios \"after each\" hook: ret\n    at Context.ret (node_modules\\selenium-webdriver\\testing\\index.js:182:10)\n    at processImmediate (internal/timers.js:458:21)",
                "diff": null
              },
              "uuid": "b6dcdbc1-9431-44b3-b0f5-89c4ee78747b",
              "parentUUID": "e6de08d5-83d6-4aaf-a32a-f17170086167",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "changes opacity when email being showed",
              "fullTitle": "Chrome assertions scenarios changes opacity when email being showed",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var button = driver.findElement(By.className('btn-primary'));\ndriver.findElement(By.css('input')).sendKeys('test1@email.com');\nreturn button.getCssValue('opacity').then(function(result){\n    assert(result === '1', \"Opacity of \" + result + \" detected\");\n/*\nin basic assertion, call for\n.then(function(xxx){\nassert(xxx === '1');\n})\nwhen asserting if value is <blah>\n*/\n    });",
              "err": {},
              "uuid": "1ce50bc7-ec9e-48fb-b6cd-950857f2ce43",
              "parentUUID": "e6de08d5-83d6-4aaf-a32a-f17170086167",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "displays alert",
              "fullTitle": "Chrome assertions scenarios displays alert",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var button = driver.findElement(By.className('btn-primary'));\ndriver.findElement(By.css('input')).sendKeys('test1@email.com');\nbutton.click();\ndriver.wait(until.elementLocated(By.css('.alert-success')), 5000);\nvar message = driver.findElements(By.css('.alert-success')).then(function (result){\n    assert(result.length === 1, result.length + \" alert-success found\");\n\n/*\nin basic assertion, call for\n.then(function(xxx){\nassert(xxx.length === 1);\n})\nwhen asserting if only x element(s) is returned\nREMEMBER if asserting xxx.length, you have to use findElements (because you want to count the lenght from the array).\n*/\n    \n});",
              "err": {},
              "uuid": "b01cd835-bf39-485d-8a15-6cce85b87afb",
              "parentUUID": "e6de08d5-83d6-4aaf-a32a-f17170086167",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "shows navigation bar",
              "fullTitle": "Chrome assertions scenarios shows navigation bar",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.findElements(By.css('nav')).then(function (result) {\n    assert(result.length === 1, result.length + \" navbars found\");\n});",
              "err": {},
              "uuid": "6ea85d06-9696-48a2-b6d5-3fc63eadb4dc",
              "parentUUID": "e6de08d5-83d6-4aaf-a32a-f17170086167",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "1ce50bc7-ec9e-48fb-b6cd-950857f2ce43",
            "b01cd835-bf39-485d-8a15-6cce85b87afb",
            "6ea85d06-9696-48a2-b6d5-3fc63eadb4dc"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "charts": "true",
        "autoOpen": "true"
      },
      "version": "5.1.0"
    }
  }
}